{"version":3,"sources":["webpack:///webpack/bootstrap dc29d3c4b68b8b824a0a","webpack:///./src/backend/MelbourneWeatherClient.ts","webpack:///./src/backend/index.ts","webpack:///./src/model/RainfallData.ts","webpack:///./src/model/TemperatureData.ts","webpack:///./src/model/WeatherLocationData.ts","webpack:///./src/model/index.ts","webpack:///external \"soap-as-promised\""],"names":[],"mappings":"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","file":"backend-compiled-debug.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dc29d3c4b68b8b824a0a","import * as Soap from 'soap-as-promised';\r\nimport {WeatherLocationData, RainfallData, TemperatureData} from '../model/index';\r\ninterface RainfallRequestData {\r\n  parameters: string;\r\n}\r\ninterface TemperatureRequestData {\r\n  parameters: string;\r\n}\r\ninterface OnWeatherRetrievedListener {\r\n  onWeatherRetrieved(weatherLocationDataList: Array<WeatherLocationData>);\r\n}\r\ninterface OnLocationsRetrievedListener {\r\n  onLocationsRetrieved(locations: Array<string>);\r\n}\r\ninterface MelbourneWeatherServiceStub {\r\n  getLocations(locationRequestData: null): Promise<any>;\r\n  getRainfall(rainfallRequestData: RainfallRequestData): Promise<any>;\r\n  getTemperature(temperatureRequestData: TemperatureRequestData): Promise<any>;\r\n}\r\n/**\r\n * Creates a client, designed for the MelbourneWeatherApi.\r\n */\r\nclass MelbourneWeatherClient {\r\n  weatherService: MelbourneWeatherServiceStub;\r\n  onWeatherPollCompleteListeners: Array<OnWeatherRetrievedListener>;\r\n  onLocationsPollCompleteListeners: Array<OnLocationsRetrievedListener>;\r\n  constructor(melbourneWeatherSoapClient: MelbourneWeatherServiceStub) {\r\n    this.weatherService = melbourneWeatherSoapClient;\r\n    this.onWeatherPollCompleteListeners = [];\r\n    this.onLocationsPollCompleteListeners = [];\r\n  }\r\n  addOnWeatherRetrievedListener(addedListener: OnWeatherRetrievedListener) {\r\n    this.onWeatherPollCompleteListeners.push(addedListener);\r\n  }\r\n  removeOnWeatherRetrievedListener(removedListener: OnWeatherRetrievedListener) {\r\n    this.onWeatherPollCompleteListeners.filter((listener) => {\r\n      return listener !== removedListener;\r\n    });\r\n  }\r\n  addOnLocationsRetrievedListener(addedListener: OnLocationsRetrievedListener) {\r\n    this.onLocationsPollCompleteListeners.push(addedListener);\r\n  }\r\n  removeOnLocationsRetrievedListener(removedListener: OnLocationsRetrievedListener) {\r\n    this.onLocationsPollCompleteListeners.filter((listener) => {\r\n      return listener !== removedListener;\r\n    });\r\n  }\r\n  retrieveLocations() {\r\n    this.weatherService.getLocations(null)\r\n    .then((locationsResponse) => {\r\n      let locations: Array<string> = locationsResponse.return;\r\n      this.onLocationsPollCompleteListeners.forEach(\r\n        (onLocationsPollCompleteListener: OnLocationsRetrievedListener) => {\r\n          onLocationsPollCompleteListener.onLocationsRetrieved(locations);\r\n        }\r\n      );\r\n    });\r\n  }\r\n  retrieveWeatherData(locations: Array<string>) {\r\n    let weatherLocationDataList: Array<WeatherLocationData> = [];\r\n    let weatherPromises: Array<Promise<any>> = [];\r\n    locations.forEach((location: string) => {\r\n      let temperatureData: TemperatureData;\r\n      let rainfallData: RainfallData;\r\n      \r\n      const temperatureRequestPromise: Promise<any> = \r\n        this.weatherService.getRainfall({parameters: location})\r\n        .then((temperatureResponse) => {\r\n          let temperatureStrings: Array<string> = temperatureResponse.return;\r\n          temperatureData = new TemperatureData(temperatureStrings[0], temperatureStrings[1]);\r\n        });\r\n      const rainfallRequestPromise: Promise<any> = \r\n        this.weatherService.getTemperature({parameters: location})\r\n        .then((rainfallResponse) => {\r\n          let rainfallStrings: Array<string> = rainfallResponse.return;\r\n          rainfallData = new RainfallData(rainfallStrings[0], rainfallStrings[1]);\r\n        });\r\n      let compileWeatherLocationDataPromises: Array<Promise<any>> = [temperatureRequestPromise, rainfallRequestPromise];\r\n      Promise.all(compileWeatherLocationDataPromises)\r\n      .then((responses) => {\r\n        let weatherData: WeatherLocationData = new WeatherLocationData(location, rainfallData, temperatureData);\r\n        weatherLocationDataList.push(weatherData);\r\n      });\r\n      weatherPromises.push(rainfallRequestPromise);\r\n      weatherPromises.push(temperatureRequestPromise);\r\n    });\r\n    Promise.all(weatherPromises).then((responses) => {\r\n      this.onWeatherPollCompleteListeners.forEach((onWeatherPollCompleteListener) => {\r\n        onWeatherPollCompleteListener.onWeatherRetrieved(weatherLocationDataList);\r\n      }\r\n      );\r\n    });\r\n  } \r\n}\r\n// TODO: There are a lot of optional settings we can set in this builder\r\nclass Builder {\r\n  build(): Promise<MelbourneWeatherClient> {\r\n    return new Promise<MelbourneWeatherClient>((resolve, reject) => {\r\n      Soap.createClient('http://viper.infotech.monash.edu.au:8180/axis2/services/MelbourneWeather2?wsdl')\r\n      .then((weatherService: MelbourneWeatherServiceStub) => {\r\n        let melbourneWeatherClient: MelbourneWeatherClient = new MelbourneWeatherClient(weatherService);\r\n        resolve(melbourneWeatherClient);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n}\r\nexport {Builder, MelbourneWeatherClient, OnWeatherRetrievedListener, OnLocationsRetrievedListener};\r\nexport default MelbourneWeatherClient;\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/backend/MelbourneWeatherClient.ts","import { Builder, OnWeatherRetrievedListener, OnLocationsRetrievedListener } from './MelbourneWeatherClient';\r\nimport { WeatherLocationData } from '../model/index';\r\nnew Builder()\r\n.build()\r\n.then(\r\n  (melbourneWeatherClient) => {\r\n    melbourneWeatherClient.addOnWeatherRetrievedListener(\r\n      new class implements OnWeatherRetrievedListener {\r\n        onWeatherRetrieved(weatherLocationDataList: Array<WeatherLocationData>) {\r\n          console.log(weatherLocationDataList);\r\n        }\r\n      }\r\n    );\r\n    melbourneWeatherClient.addOnLocationsRetrievedListener(\r\n      new class implements OnLocationsRetrievedListener {\r\n        onLocationsRetrieved(locations: Array<string>) {\r\n          console.log(locations);\r\n          setInterval(() => { melbourneWeatherClient.retrieveWeatherData(locations); }, 5000);\r\n        }\r\n      }\r\n    );\r\n    melbourneWeatherClient.retrieveLocations();\r\n  }\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/backend/index.ts","class RainfallData {\r\n  rainfall: string;\r\n  timestamp: string;\r\n  constructor(rainfall: string, timestamp: string) {\r\n    this.rainfall = rainfall;\r\n    this.timestamp = timestamp;\r\n  }\r\n}\r\nexport {RainfallData};\r\nexport default RainfallData;\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/model/RainfallData.ts","class TemperatureData {\r\n  temperature: string;\r\n  timestamp: string;\r\n  constructor(temperature: string, timestamp: string) {\r\n    this.temperature = temperature;\r\n    this.timestamp = timestamp;\r\n  }\r\n}\r\nexport {TemperatureData};\r\nexport default TemperatureData;\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/model/TemperatureData.ts","import {RainfallData} from './RainfallData';\r\nimport {TemperatureData} from './TemperatureData';\r\nclass WeatherLocationData {\r\n    location: string;\r\n    rainfallData: RainfallData;\r\n    temperatureData: TemperatureData;\r\n    constructor(location: string, rainfallData: RainfallData, temperatureData: TemperatureData) {\r\n        this.location = location;   \r\n        this.rainfallData = rainfallData;\r\n        this.temperatureData = temperatureData;\r\n    }\r\n}\r\nexport {WeatherLocationData};\r\nexport default WeatherLocationData;\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/model/WeatherLocationData.ts","import {TemperatureData} from './TemperatureData';\r\nimport {RainfallData} from './RainfallData';\r\nimport {WeatherLocationData} from './WeatherLocationData';\r\nexport {TemperatureData};\r\nexport {RainfallData};\r\nexport {WeatherLocationData};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/model/index.ts","module.exports = require(\"soap-as-promised\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"soap-as-promised\"\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}